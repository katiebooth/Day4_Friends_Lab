A - Easy - STOPS

stops = [ "Croy", "Cumbernauld", "Falkirk High", "Linlithgow", "Livingston", "Haymarket" ]

# 1. Add `"Edinburgh Waverley"` to the end of the list
stops.append("Edinburgh Waverley")

# 2. Add `"Glasgow Queen St"` to the start of the list
stops.insert(0, "Glasgow Queen St")

# 3. Add `"Polmont"` at the appropriate point (between `"Falkirk High"` and `"Linlithgow"`)
stops.insert(4, "Polmont")

# 4. Print out the index position of `"Linlithgow"`
stops.index("Linlithgow")

# 5. Remove `"Livingston"` from the list using its name
stops.remove("Livingston")

# 6. Delete `"Cumbernauld"` from the list by index
stops.pop(stops.index("Cumbernauld")) #
# Alternatively use the del operator
# del stops[stops.index("Cumbernauld")]

# 7. Print the number of stops in the list
len(stops)

# 8. Sort the list alphabetically
stops.sort()

# 9. Reverse the positions of the stops in the list
stops.reverse()

# 10. Print out all the stops using a for loop
for stop in stops:
  print(stop)


B - MVP - USERS

users = {
  "Jonathan": {
    "twitter": "jonnyt",
    "lottery_numbers": [6, 12, 49, 33, 45, 20],
    "home_town": "Stirling",
    "pets": [
    {
      "name": "fluffy",
      "species": "cat"
    },
    {
      "name": "fido",
      "species": "dog"
    },
    {
      "name": "spike",
      "species": "dog"
    }
  ]
  },
  "Erik": {
    "twitter": "eriksf",
    "lottery_numbers": [18, 34, 8, 11, 24],
    "home_town": "Linlithgow",
    "pets": [
    {
      "name": "nemo",
      "species": "fish"
    },
    {
      "name": "kevin",
      "species": "fish"
    },
    {
      "name": "spike",
      "species": "dog"
    },
    {
      "name": "rupert",
      "species": "parrot"
    }
  ]
  },
  "Avril": {
    "twitter": "bridgpally",
    "lottery_numbers": [12, 14, 33, 38, 9, 25],
    "home_town": "Dunbar",
    "pets": [
      {
        "name": "monty",
        "species": "snake"
      }
    ]
  }
}

# 1. Get Jonathan's Twitter handle (i.e. the string `"jonnyt"`)
users["Jonathan"]["twitter"]

# 2. Get Erik's hometown
users["Erik"]["home_town"]

# 3. Get the list of Erik's lottery numbers
users["Erik"]["lottery_numbers"]

# 4. Get the species type of Avril's pet Monty
users["Avril"]["pets"][0]["species"]

# 5. Get the smallest of Erik's lottery numbers
sorted(users["Erik"]["lottery_numbers"])[0]

# 6. Print a list of Avril's lottery numbers that are even
lottery_numbers = users["Avril"]["lottery_numbers"]
even_numbers = []
for lottery_number in lottery_numbers:
    if lottery_number % 2 == 0:
        even_numbers.append(lottery_number)

print(even_numbers)

# 7. Erik is one lottery number short! Add the number `7` to be included in his lottery numbers
users["Erik"]["lottery_numbers"].append(7)

# 8. Change Erik's hometown to Edinburgh
users["Erik"]["home_town"] = "Edinburgh"

# 9. Add a pet dog to Erik called "Fluffy"
users["Erik"]["pets"].append({ "name": "Fluffy", "species": "dog" })

# 10. Add another person to the users dictionary
users["ian"] = {
    "twitter": "twitter name",
    "lottery_numbers": [4,5,6,7,8],
    "home_town": "Edinburgh",
    "pets": [
      {
        "name": "Dave",
        "species": "dog"
      }
    ]
}

C - Extentions - UK

united_kingdom = [
  {
    "name": "Scotland",
    "population": 5295000,
    "capital": "Edinburgh"
  },
  {
    "name": "Wales",
    "population": 3063000,
    "capital": "Swansea"
  },
  {
    "name": "England",
    "population": 53010000,
    "capital": "London"
  }
]

# 1. Change the capital of Wales from `"Swansea"` to `"Cardiff"`.

united_kingdom[1]["capital"] = "Cardiff"

# 2. Create a dictionary for Northern Ireland and add it to the `united_kingdom` list (The capital is Belfast, and the population is 1,811,000).

united_kingdom.append({
  "name": "Northern Ireland",
  "population": 1811000,
  "capital": "Belfast"
})

print(united_kingdom)

# 3. Use a loop to print the names of all the countries in the UK.

for country in united_kingdom:
  print(country["name"])


# 4. Use a loop to find the total population of the UK.

total_population = 0

for country in united_kingdom:
    total_population += country["population"]


print(total_population)


D - HARD# - numbers


For the following list of numbers:

numbers = [1, 6, 2, 2, 7, 1, 6, 13, 99, 7]

# 1. Print out a list of the even integers:

even_numbers = []
for number in numbers:
    if number %2 == 0:
        even_numbers.append(number)

print(even_numbers)

# 2. Print the difference between the largest and smallest value:

largest = max(numbers)
smallest = min(numbers)

print(largest - smallest)

# 3. Print True if the list contains a 2 next to a 2 somewhere.

result = False
index = 0
for number in numbers:
    if (number == 2 and numbers[index-1] == 2):
        result = True
    index +=1
print(result)

# 4. Print the sum of the numbers, 
#    BUT ignore any section of numbers starting with a 6 and extending to the next 7.
#    
#    So [11, 6, 4, 99, 7, 11] would have sum of 222

total = 0
found_6 = False
for number in numbers: 
    if number == 6:
        found_6 = True
    elif found_6:
        if number == 7:
            found_6 = False
    else:
        total += number

print(total)



# 5. HARD! Print the sum of the numbers. 
#    Except the number 13 is very unlucky, so it does not count.
#    And numbers that come immediately after a 13 also do not count.
#  
#    So [5, 13, 2] would have sum of 5. 

#    HINT - You will need to track the index throughout the loop.

index = 0 
total = 0
for number in numbers:
    if number == 13 or numbers[index-1] == 13:
        pass
    else:
     total += number
    index += 1
print(total)


